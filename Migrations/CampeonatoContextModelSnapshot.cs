// <auto-generated />
using System;
using Campeonato.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Campeonato.Migrations
{
    [DbContext(typeof(CampeonatoContext))]
    partial class CampeonatoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Campeonato.Entidades.Fases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Categoria");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("tbl_fase");
                });

            modelBuilder.Entity("Campeonato.Entidades.Goleiros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Categoria");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("tbl_goleiro");
                });

            modelBuilder.Entity("Campeonato.Entidades.GolsDoJogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Gols");

                    b.Property<int?>("JogadorId");

                    b.Property<int?>("JogoId");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.HasIndex("JogoId");

                    b.ToTable("rel_jogo_gols");
                });

            modelBuilder.Entity("Campeonato.Entidades.Jogadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<int?>("TimeId");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("rel_time_jogador");
                });

            modelBuilder.Entity("Campeonato.Entidades.Jogos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data_Hora");

                    b.Property<int?>("FaseId");

                    b.Property<int?>("Goleiro_1Id");

                    b.Property<int?>("Goleiro_2Id");

                    b.Property<int?>("Resultado_1");

                    b.Property<int?>("Resultado_2");

                    b.Property<int?>("Time_1Id");

                    b.Property<int?>("Time_2Id");

                    b.HasKey("Id");

                    b.HasIndex("FaseId");

                    b.HasIndex("Goleiro_1Id");

                    b.HasIndex("Goleiro_2Id");

                    b.HasIndex("Time_1Id");

                    b.HasIndex("Time_2Id");

                    b.ToTable("tbl_jogo");
                });

            modelBuilder.Entity("Campeonato.Entidades.Times", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Categoria");

                    b.Property<string>("Escudo");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("tbl_time");
                });

            modelBuilder.Entity("Campeonato.Entidades.GolsDoJogo", b =>
                {
                    b.HasOne("Campeonato.Entidades.Jogadores", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId");

                    b.HasOne("Campeonato.Entidades.Jogos", "Jogo")
                        .WithMany()
                        .HasForeignKey("JogoId");
                });

            modelBuilder.Entity("Campeonato.Entidades.Jogadores", b =>
                {
                    b.HasOne("Campeonato.Entidades.Times", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId");
                });

            modelBuilder.Entity("Campeonato.Entidades.Jogos", b =>
                {
                    b.HasOne("Campeonato.Entidades.Fases", "Fase")
                        .WithMany()
                        .HasForeignKey("FaseId");

                    b.HasOne("Campeonato.Entidades.Goleiros", "Goleiro_1")
                        .WithMany()
                        .HasForeignKey("Goleiro_1Id");

                    b.HasOne("Campeonato.Entidades.Goleiros", "Goleiro_2")
                        .WithMany()
                        .HasForeignKey("Goleiro_2Id");

                    b.HasOne("Campeonato.Entidades.Times", "Time_1")
                        .WithMany()
                        .HasForeignKey("Time_1Id");

                    b.HasOne("Campeonato.Entidades.Times", "Time_2")
                        .WithMany()
                        .HasForeignKey("Time_2Id");
                });
#pragma warning restore 612, 618
        }
    }
}
